apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xapps.platform.upbound.io
  labels:
    provider: helm
spec:
  writeConnectionSecretsToNamespace: upbound-system
  compositeTypeRef:
    apiVersion: platform.upbound.io/v1alpha1
    kind: XApp
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: crossplane-contrib-function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: helmRelease
            base:
              apiVersion: helm.crossplane.io/v1beta1
              kind: Release
              spec:
                forProvider:
                  chart:
                    name: ghost
                    repository: https://charts.bitnami.com/bitnami
                    version: 19.3.10
                  namespace: ghost
                  set:
                    - name: externalDatabase.host
                      valueFrom:
                        secretKeyRef:
                          key: host
                    - name: externalDatabase.user
                      valueFrom:
                        secretKeyRef:
                          key: username
                    - name: externalDatabase.password
                      valueFrom:
                        secretKeyRef:
                          key: password
                  values:
                    externalDatabase:
                      database: upbound
                      port: 3306
                    ghostBlogTitle: Upbound Rocks!
                    ghostHost: upboundrocks.cloud
                    mysql:
                      enabled: false
                    persistence:
                      enabled: false
                  wait: true
                rollbackLimit: 3
            patches:
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.labels
                toFieldPath: metadata.labels
              - type: FromCompositeFieldPath
                fromFieldPath: metadata.annotations
                toFieldPath: metadata.annotations
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.providerConfigName
                toFieldPath: spec.providerConfigRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.deletionPolicy
                toFieldPath: spec.deletionPolicy
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.helm.chart.version
                toFieldPath: spec.forProvider.chart.version
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.helm.values
                toFieldPath: spec.forProvider.values
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.helm.wait
                toFieldPath: spec.forProvider.wait
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.namespace
                toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.name
                toFieldPath: spec.forProvider.set[0].valueFrom.secretKeyRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.namespace
                toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.name
                toFieldPath: spec.forProvider.set[1].valueFrom.secretKeyRef.name
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.namespace
                toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.namespace
              - type: FromCompositeFieldPath
                fromFieldPath: spec.parameters.passwordSecretRef.name
                toFieldPath: spec.forProvider.set[2].valueFrom.secretKeyRef.name
